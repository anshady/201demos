df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
typeof(df$Age)
flowers <- as.data.frame(iris, stringsAsFactors = FALSE)
typeof(flowers$Sepal.Length)
flowers[flowers$Sepal.Length == 5.1, ]
"Apple" == 17
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
traceback()
source('~/.active-rstudio-document')
ticket_class <- df[df$Class == "Crew", ]
df <- as.data.frame(Titanic, stringsAsFactors = FALSE)
ticket_class <- df[df$Class == "Crew", ]
View(ticket_class)
men <- ticket_class[ticket_class$Age == "Adult" &
ticket_class$Sex == "Male", ]
men_survivors <- men[men$Survived == "Yes", "Freq"]
men_survival_rate <- round(men_survivors / sum(men$Freq) * 100)
women <- ticket_class[ticket_class$Age == "Adult" &
ticket_class$Sex == "Female", ]
women_survivors <- women[women$Survived == "Yes", "Freq"]
children <- ticket_class[ticket_class$Age == "Child", ]
children_survivors <- children[children$Survived == "Yes", "Freq"]
women_and_children_survival_rates <- round(
(sum(women_survivors, children_survivors)) / sum(women, children))
View(df)
library(knitr)
source("./analysis.R")
reviews_graph
View(price_map)
price_map
library(dplyr)
library(lintr)
library(styler)
library(tidyr)
library(leaflet)
library(ggplot2)
library(plotly)
library(gridExtra)
setwd("~/Desktop/info201/final-project-kshruti99")
stringsAsFactors = FALSE)
data <- read.csv(file = "../data/Datafiniti_Fast_Food_Restaurants_May19.csv", stringsAsFactors = FALSE)
data <- read.csv(file = "data/Datafiniti_Fast_Food_Restaurants_May19.csv", stringsAsFactors = FALSE)
bar_chart <- plot_ly(data = num_per_name_df, labels = ~name, values = ~count, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(count, ' stores'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
num_per_name_df <- data %>%
group_by(name = tolower(name)) %>%
summarize(count = n()) %>%
top_n(10, count) %>%
arrange(desc(count))
View(num_per_name_df)
bar_chart <- plot_ly(data = num_per_name_df, labels = ~name, values = ~count, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(count, ' stores'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
bar_chart
bar_chart <- bar_chart %>% layout(title = 'Top Ten Fast Food Restaurants',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklables = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklables = FALSE))
bar_chart
fourth_chart(data)
knitr::opts_chunk$set(echo = TRUE)
second_chart(data)
library(knitr)
#System struggling with first chart- debug later
source("scripts/firstchart.R")
source("scripts/secondchart.R")
source("scripts/thirdchart.R")
source("scripts/summarycalc.R")
source("scripts/summarytable.R")
first_chart(data)
fourth_chart(data)
fourth_chart(data)
library(knitr)
#System struggling with first chart- debug later
source("scripts/firstchart.R")
source("scripts/secondchart.R")
source("scripts/thirdchart.R")
source("scripts/fourthchart.R")
source("scripts/summarycalc.R")
source("scripts/summarytable.R")
fourth_chart(data)
fourth_chart(data)
setwd("~/Desktop/info201/a5--panda2jo")
library(knitr)
source("analysis.R")
traceback()
setwd("~/Desktop/info201/final-project-kshruti99")
data <- read.csv(file = "data/Datafiniti_Fast_Food_Restaurants_May19.csv", stringsAsFactors = FALSE)
testing <- data %>%
mutate(isMcD = (name == "McDonald's"))
View(testing)
setwd("~/Desktop/info201/demos/shiny")
airbnb_data <- read.csv('./data/listings.csv', stringsAsFactors = FALSE)
View(airbnb_data)
library(dplyr)
library(plotly)
# Display neighborhoods on x-axis, and average number
# of reviews for that neighborhood on y-axis.
build_bar <- function(data, variable, color) {
bar_chart <- data %>%
group_by(neighbourhood_group) %>%
summarise(avg = mean(data[[variable]])) %>%
plot_ly(
type = "bar",
x = ~neighbourhood_group,
y = ~avg
) %>%
layout(
xaxis = list(
title = "Neighborhood"
),
yaxis = list(
title = data[[variable]]
)
)
return(bar_chart)
}
shiny::runApp()
runApp()
runApp()
View(airbnb_data)
runApp()
runApp()
runApp()
runApp()
